"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const observerUseCase1_1 = require("./src/behavioral/observer/observerUseCase1");
const observerUseCase2_1 = require("./src/behavioral/observer/observerUseCase2");
const strategyUseCase1_1 = require("./src/behavioral/strategy/strategyUseCase1");
const strategyUseCase2_1 = require("./src/behavioral/strategy/strategyUseCase2");
const singletonUseCase1_1 = require("./src/creational/singleton/singletonUseCase1");
const singletonUseCase2_1 = require("./src/creational/singleton/singletonUseCase2");
const factoryUseCase1_1 = require("./src/creational/factory/factoryUseCase1");
const factoryUseCase2_1 = require("./src/creational/factory/factoryUseCase2");
const adapterUseCase1_1 = require("./src/structural/adapter/adapterUseCase1");
const adapterUseCase2_1 = require("./src/structural/adapter/adapterUseCase2");
const decoratorUseCase1_1 = require("./src/structural/decorator/decoratorUseCase1");
const decoratorUseCase2_1 = require("./src/structural/decorator/decoratorUseCase2");
function runAllUseCases() {
    console.log('--- Observer Pattern Use Case 1: Stock Price Monitoring ---');
    (0, observerUseCase1_1.observerUseCase1)();
    console.log('\n--- Observer Pattern Use Case 2: Event Subscription System ---');
    (0, observerUseCase2_1.observerUseCase2)();
    console.log('\n--- Strategy Pattern Use Case 1: Payment Processing ---');
    (0, strategyUseCase1_1.strategyUseCase1)();
    console.log('\n--- Strategy Pattern Use Case 2: Sorting Algorithms ---');
    (0, strategyUseCase2_1.strategyUseCase2)();
    console.log('\n--- Singleton Pattern Use Case 1: Configuration Manager ---');
    (0, singletonUseCase1_1.singletonUseCase1)();
    console.log('\n--- Singleton Pattern Use Case 2: Database Connection ---');
    (0, singletonUseCase2_1.singletonUseCase2)();
    console.log('\n--- Factory Pattern Use Case 1: Logger Factory ---');
    (0, factoryUseCase1_1.factoryUseCase1)();
    console.log('\n--- Factory Pattern Use Case 2: Notification Factory ---');
    (0, factoryUseCase2_1.factoryUseCase2)();
    console.log('\n--- Adapter Pattern Use Case 1: Payment Gateway Integration ---');
    (0, adapterUseCase1_1.adapterUseCase1)();
    console.log('\n--- Adapter Pattern Use Case 2: Legacy System Integration ---');
    (0, adapterUseCase2_1.adapterUseCase2)();
    console.log('\n--- Decorator Pattern Use Case 1: Enhancing Text Editor ---');
    (0, decoratorUseCase1_1.decoratorUseCase1)();
    console.log('\n--- Decorator Pattern Use Case 2: Adding Features to Notifications ---');
    (0, decoratorUseCase2_1.decoratorUseCase2)();
}
runAllUseCases();
